{
    "$id": "no://nolang.app.schema",
    "description": "json schema for any Nolang app config file",
    "type": "object",
    "properties": {
        "name": {
            "type": "string",
            "description": "name of the app"
        },
        "schemas": {
            "anyOf": [
                {
                    "description": "direct schemas",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "$ref": "no://nolang.entity.schema"
                    }
                },
                {
                    "description": "schema loader",
                    "type": "object",
                    "properties": {
                        "adapter": {
                            "description": "type of adapter of schema loader",
                            "type": "string",
                            "enum": ["file","mongodb","mysql"],
                            "default": "file"
                        },
                        "path": {
                            "description": "path of folder containing app schemas",
                            "type": "string"
                        },
                        "watch": {
                            "description": "watch on changes of schema files to auto reload in Nolang, can be true to use default port or set port number directly in watch",
                            "type": ["boolean","number"],
                            "default": false
                        },
                        "cache": {
                            "description": "caching schemas information TODO",
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "description": "Is true when cache must be enabled",
                                    "type": "boolean",
                                    "default": false
                                },
                                "redis": {
                                    "description": "Redis configs for cache",
                                    "type": "object",
                                    "properties": {
                                        "time": {
                                            "description": "How much is cache duration//TODO",
                                            "type": "number"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": ["path"]
                }
            ]
        },
        "modules": {
            "description": "path of nl_modules",
            "type": "string"
        },
        "storage": {
            "description": "default storage config for app schemas",
            "$ref": "no://nolang.entity.schema#/definitions/ssStorage"
        },
        "endpoints": {
            "description": "all endpoints this app serves",
            "type": "array",
            "items": {
                "type": "object",
                "description": "config of one endpoint",
                "oneOf": [
                    {
                        "properties": {
                            "type": {
                                "type": "string",
                                "enum": ["cli"]
                            }
                        },
                        "additionalProperties": false,
                        "required": ["type"]
                    },
                    {
                        "properties": {
                            "type": {
                                "type": "string",
                                "enum": ["mqtt"]
                            },
                            "url": {
                                "type": "string"
                            },
                            "publishTopic": {
                                "type": "string",
                                "description": "publish responses to this topic",
                                "examples": ["thisEndpointTopic/+/res"]
                            },
                            "subscribeTopic": {
                                "type": "string",
                                "description": "subscribe to this topic for receiving request commands",
                                "examples": ["thisEndpointTopic/+/req"]
                            },
                            "options": {
                                "type": "object"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["type","url","publishTopic", "subscribeTopic"]
                    },
                    {
                        "properties": {
                            "type": {
                                "type": "string",
                                "enum": ["amqp"]
                            },
                            "url": {
                                "type": "string"
                            },
                            "publishQueue": {
                                "type": "string",
                                "description": "publish responses to this queue",
                                "examples": ["Q4res"]
                            },
                            "subscribeQueue": {
                                "type": "string",
                                "description": "subscribe to this queue for receiving request commands",
                                "examples": ["Q4req"]
                            },
                            "options": {
                                "type": "object"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["type","url","subscribeQueue","publishQueue"]
                    },
                    {
                        "properties": {
                            "type": {
                                "type": "string",
                                "enum": ["redis"]
                            },
                            "url": {
                                "description": "connection string in format redis[s]://[[username][:password]@][host][:port][/db-number]",
                                "type": "string",
                                "examples": ["redis://alice:foobared@awesome.redis.server:6380", "redis://localhost:6380"]
                            },
                            "publishChannels": {
                                "type": "string",
                                "description": "publish responses to this channel",
                                "examples": ["thisEndpointChannel*res"]
                            },
                            "subscribeChannels": {
                                "type": "string",
                                "description": "subscribe to this channel for receiving request commands",
                                "examples": ["thisEndpointChannel*req"]
                            },
                            "options": {
                                "type": "object"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["type", "publishChannels", "subscribeChannels"]
                    },
                    {
                        "properties": {
                            "type": {
                                "type": "string",
                                "enum": ["socket"]
                            },
                            "port": {
                                "type": "number"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["type","port"]
                    },
                    {
                        "properties": {
                            "type": {
                                "type": "string",
                                "enum": ["file","js"]
                            },
                            "filename": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["type","filename"]
                    },
                    {
                        "properties": {
                            "type": {
                                "type": "string",
                                "enum": ["json"]
                            },
                            "script": {
                                "type": ["object","array"]
                            }
                        },
                        "additionalProperties": false,
                        "required": ["type","script"]
                    },
                    {
                        "properties": {
                            "type": {
                                "type": "string",
                                "enum": ["http"]
                            },
                            "port": {
                                "type": "number"
                            },
                            "static": {
                                "description": "path of static files, could be relative or absolute",
                                "type": "string"
                            },
                            "cors": {
                                "description": "CORS options if needed CORS",
                                "type": "object",
                                "properties": {
                                    "origin": {
                                        "type": "string"
                                    },
                                    "methods": {
                                        "type": "string"
                                    },
                                    "preflightContinue": {
                                        "type": "boolean"
                                    },
                                    "optionsSuccessStatus": {
                                        "type": "number"
                                    }
                                }
                            },
                            "filter": {
                                "description": "filter ips",
                                "type": "object",
                                "properties": {
                                    "ips": {
                                        "description": "IP list"
                                    },
                                    "mode": {
                                        "description": "deny or allow",
                                        "enum": ["deny", "allow"],
                                        "type": "string"
                                    }
                                }
                            },
                            "upload": {
                                "description": "File upload options if needed",
                                "type": "object",
                                "properties": {
                                    "root": {
                                        "type": "string",
                                        "description": "base route of saving all files of any entity, files will be saved in path /[root]/[entityName]/[$$objid]/[fieldName]"
                                    },
                                    "maxSize": {
                                        "type": "number",
                                        "description": "max size of file in Bytes"
                                    }
                                }
                            },
                            "routes": {
                                "type": "array",
                                "description": "list of handlers of routes in http endpoint",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "path": {
                                            "description": "Relative http path to receive to this route handler",
                                            "type": "string"
                                        },
                                        "type": {
                                            "description": "Sets the Content-Type HTTP header to the MIME type as determined by the specified type",
                                            "type": "string"
                                        },
                                        "method": {
                                            "description": "HTTP method",
                                            "type": "string",
                                            "enum": ["all","ws","checkout","copy","delete","get","head","lock","merge","mkactivity","mkcol","move","m-search","notify","options","patch","post","purge","put","report","search","subscribe","trace","unlock","unsubscribe"]
                                        },
                                        "return": {
                                            "description": "it is default command of this route and Nolang will return its response",
                                            "type": "object",
                                            "$ref": "no://nolang.entity.schema#"
                                        },
                                        "cors": {
                                            "description": "CORS options if needed CORS for this route",
                                            "type": "object"
                                        },
                                        "middleware": {
                                            "description": "TODO"
                                        },
                                        "bodyParser": {
                                            "type": ["string","object"],
                                            "description": "which body Parser method must be used in this route, json is default, \"json\",\"text\",\"raw\",\"urlencoded\""
                                        }
                                    },
                                    "additionalProperties": false,
                                    "required": ["path","method"]
                                }
                            },
                            "helmet": {
                                "description": "Helmet helps you secure your Express apps by setting various HTTP headers. see https://helmetjs.github.io",
                                "type": "object"
                            },
                            "https": {
                                "type": "object",
                                "properties": {
                                    "enabled": {
                                        "type": "boolean",
                                        "default": false
                                    },
                                    "port": {
                                        "type": "number",
                                        "default": 443
                                    },
                                    "privateKey": {
                                        "type": "string"
                                    },
                                    "certificate": {
                                        "type": "string"
                                    },
                                    "ca": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "additionalProperties": false,
                        "required": ["type","port"]
                    }
                ]
            }
        },
        "user": {
            "description": "user information for this app",
            "type": "object",
            "properties": {
                "authenticate": {
                    "description": "If this app needs to authenticate",
                    "type": "boolean"
                },
                "schema": {
                    "description": "the $Id of the schema users information is stored",
                    "type": "string"
                },
                "usernameField": {
                    "description": "name of field indicating username of users",
                    "type": "string"
                },
                "passwordField": {
                    "description": "name of field indicating password of users",
                    "type": "string"
                },
                "rolesField": {
                    "description": "name of field indicating roles assigned to user",
                    "type": "string"
                },
                "token": {
                    "type": "object",
                    "description": "a schema which maps tokens to users",
                    "properties": {
                        "type": {
                            "type": "string",
                            "enum": ["jwt", "custom"],
                            "default": "jwt"
                        },
                        "schema": {
                            "type": "string",
                            "description": "schema which stores tokens and ids of users"
                        },
                        "tokenField": {
                            "type": "string",
                            "description": "name of field indicating token"
                        },
                        "useridField": {
                            "type": "string",
                            "description": "name of field indicating userid"
                        }
                    }
                },
                "jwt": {
                    "description": "jsonwebtoken",
                    "type": "object",
                    "properties": {
                        "secret": {
                            "type": "string"
                        },
                        "expiresIn": {
                            "type": "string",
                            "description": "time for expire token like 10h",
                            "default": "24h"
                        },
                        "cookie": {
                            "type": "object",
                            "description": "if exists, save token in cookie",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "name of cookie, default jwt",
                                    "default": "jwt"
                                },
                                "options": {
                                    "type": "object",
                                    "properties": {
                                        "domain": {
                                            "description": "Domain name for the cookie. Defaults to the domain name of the app.",
                                            "type": "string"
                                        },
                                        "encode": {
                                            "description": "A synchronous function used for cookie value encoding. Defaults to encodeURIComponent.",
                                            "type": "string"
                                        },
                                        "SameSite": {
                                            "description": "Value of the “SameSite” Set-Cookie attribute.",
                                            "type": "string",
                                            "default": "Strict"
                                        },
                                        "path": {
                                            "type": "string",
                                            "default": "/",
                                            "description": "This is the path where cookie will be stored. Default is '/'"
                                        },
                                        "expires": {
                                            "type": "string",
                                            "description": "This parameter defines the expiry time of the cookie in GMT format. Default value is 0, that creates a session cookie"
                                        },
                                        "priority": {
                                            "type": "string",
                                            "description": "Value of the “Priority” Set-Cookie attribute."
                                        },
                                        "maxAge": {
                                            "type": "number",
                                            "description": "This parameter represents a convenient option for setting the expiry time relative to the current time in milliseconds"
                                        },
                                        "httpOnly": {
                                            "type": "boolean",
                                            "description": "if true The cookie only accessible by the web server"
                                        },
                                        "signed": {
                                            "type": "boolean",
                                            "description": "Indicates if the cookie should be signed"
                                        },
                                        "secure": {
                                            "type": "boolean",
                                            "description": "This marks the cookie to be used only with https"
                                        },
                                        "partitioned": {
                                            "type": "boolean",
                                            "description": "Indicates that the cookie should be stored using partitioned storage"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": ["secret"]
                },
                "directRoles": {
                    "description": "allow set roles directly in script?",
                    "type": "boolean",
                    "default": false
                },
                "directUserId": {
                    "description": "allow set userid directly in script?",
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "microservices": {
            "description": "microservice clients to other services (other apps created with nolang with compatible endpoints)",
            "type": "array",
            "items": {
                "oneOf": [
                    {
                        "properties": {
                            "name": {
                                "description": "key of this microservice",
                                "type": "string"
                            },
                            "type": {
                                "type": "string",
                                "enum": ["mqtt"]
                            },
                            "url": {
                                "type": "string"
                            },
                            "publishTopic": {
                                "type": "string",
                                "description": "publish requests to this topic",
                                "examples": ["targetServiceEndpointTopic/myClientId/req"]
                            },
                            "subscribeTopic": {
                                "type": "string",
                                "description": "subscribe to this topic for receiving request commands",
                                "examples": ["targetServiceEndpointTopic/myClientId/res"]
                            },
                            "options": {
                                "type": "object"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["name","type","url","publishTopic", "subscribeTopic"]
                    },
                    {
                        "properties": {
                            "name": {
                                "description": "key of this microservice",
                                "type": "string"
                            },
                            "type": {
                                "type": "string",
                                "enum": ["amqp"]
                            },
                            "url": {
                                "type": "string"
                            },
                            "queue": {
                                "type": "string",
                                "description": "name of queue"
                            },
                            "options": {
                                "type": "object"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["name","type","url","queue"]
                    },
                    {
                        "properties": {
                            "name": {
                                "description": "key of this microservice",
                                "type": "string"
                            },
                            "type": {
                                "type": "string",
                                "enum": ["redis"]
                            },
                            "url": {
                                "type": "string"
                            },
                            "publishChannel": {
                                "type": "string",
                                "description": "publish requests to this channel",
                                "examples": ["targetServiceEndpointChannelMYCLIENTIDreq"]
                            },
                            "subscribeChannel": {
                                "type": "string",
                                "description": "subscribe to this channel for receiving request commands",
                                "examples": ["targetServiceEndpointChannelMYCLIENTIDres"]
                            }
                        },
                        "additionalProperties": false,
                        "required": ["name","type","publishChannel", "subscribeChannel"]
                    },
                    {
                        "properties": {
                            "name": {
                                "description": "key of this microservice",
                                "type": "string"
                            },
                            "type": {
                                "type": "string",
                                "enum": ["socket"]
                            },
                            "port": {
                                "type": "number"
                            },
                            "host": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["name","type","port"]
                    },
                    {
                        "properties": {
                            "name": {
                                "description": "key of this microservice",
                                "type": "string"
                            },
                            "type": {
                                "type": "string",
                                "enum": ["http"]
                            },
                            "method": {
                                "type": "string",
                                "enum": ["post","put","push","ws"],
                                "default": "post"
                            },
                            "url": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": ["name","type","url"]
                    }
                ]
            }
        },
        "logger": {
            "description": "logger options",
            "type": "object",
            "properties": {
                "terminal": {
                    "description": "TODO, log on terminal",
                    "type": "boolean"
                },
                "files": {
                    "description": "target files keys are level and values are files' absolute or relative address",
                    "type": "object",
                    "properties": {
                        "fatal": {
                            "type": "string"
                        },
                        "error": {
                            "type": "string"
                        },
                        "warn": {
                            "type": "string"
                        },
                        "info": {
                            "type": "string"
                        },
                        "debug": {
                            "type": "string"
                        },
                        "trace": {
                            "type": "string"
                        }
                    },
                    "additionalProperties": false
                },
                "schema": {
                    "description": "TODO,  log to one schema by this name",
                    "type": "string"
                },
                "microservice": {
                    "description": "TODO, if log schema is in another service, this is the service name",
                    "type": "string"
                }
            }
        },
        "cluster": {
            "description": "How many CPU cores Nolang app can use? activated if this items exists and its value was bigger than zero ",
            "type": ["number","boolean"]
        }
    },
    "required": [
        "schemas", "endpoints"
    ]
}
